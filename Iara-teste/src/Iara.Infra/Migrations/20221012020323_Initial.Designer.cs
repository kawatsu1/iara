// <auto-generated />
using System;
using Iara.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Iara.Infra.Migrations
{
    [DbContext(typeof(IaraContext))]
    [Migration("20221012020323_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Iara.Domain.Entities.Cotacao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Bairro")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("VARCHAR(9)");

                    b.Property<string>("CNPJComprador")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("VARCHAR(14)");

                    b.Property<string>("CNPJFornecedor")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("VARCHAR(14)");

                    b.Property<string>("Complemento")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime>("DataCotacao")
                        .HasColumnType("DATETIME2");

                    b.Property<DateTime>("DataEntregaCotacao")
                        .HasColumnType("DATETIME2");

                    b.Property<string>("Logradouro")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("NumeroCotacao")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("Observacao")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)");

                    b.Property<string>("UF")
                        .HasMaxLength(2)
                        .HasColumnType("VARCHAR(2)");

                    b.HasKey("Id");

                    b.ToTable("Cotacao", (string)null);
                });

            modelBuilder.Entity("Iara.Domain.Entities.CotacaoItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("CotacaoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Marca")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("NumeroItem")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)");

                    b.Property<double>("Preco")
                        .HasColumnType("FLOAT");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INT");

                    b.Property<string>("Unidade")
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR(10)");

                    b.HasKey("Id");

                    b.HasIndex("CotacaoId");

                    b.ToTable("CotacaoItem", (string)null);
                });

            modelBuilder.Entity("Iara.Domain.Entities.CotacaoItem", b =>
                {
                    b.HasOne("Iara.Domain.Entities.Cotacao", "Cotacao")
                        .WithMany("CotacaoItem")
                        .HasForeignKey("CotacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cotacao");
                });

            modelBuilder.Entity("Iara.Domain.Entities.Cotacao", b =>
                {
                    b.Navigation("CotacaoItem");
                });
#pragma warning restore 612, 618
        }
    }
}
